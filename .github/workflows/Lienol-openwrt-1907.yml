#
#
# 感谢p3terx大神的一键编译脚本
# 
# Copyright (C) 2019 P3TERX <https://p3terx.com>
# <https://github.com/P3TERX/Actions-OpenWrt.git>
#
#
#

name: Lienol-19.07-OpenWrt 固件

on:
  repository_dispatch:

#编辑任意指定文件触发开始编译
#  push:
#    branches:
#      - master
#    paths:
#      - 'Lienol-1907.config'


#定时触发开始编译(utc時間)
#  schedule:
#    - cron: 0 8 */9 * *


#点☆Star触发开始编译
  watch:
#    types: started


env:
  REPO_URL: https://github.com/Lienol/openwrt
  REPO_BRANCH: dev-19.07
  CONFIG_FILE: Lienol-1907.config
  SSH_ACTIONS: false
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: false
  TZ: Asia/Shanghai

jobs:
  build:
    name: 编译OpenWrt-19.07固件
    runs-on: ubuntu-18.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:      
    - name: 准备完毕
      uses: actions/checkout@master

    - name: 开始安装编译所需系统
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-1804)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: 下载19.07源码
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: 删除不需要的插件
      run: |
        cd openwrt
        rm package/lean/luci-theme-argon -rf
        rm package/lean/luci-app-flowoffload -fr
        rm package/lean/shortcut-fe/ -fr
        rm package/lean/luci-app-sfe/ -fr

    - name: 加载自定义插件设置
      run: |
        cd openwrt/package/diy/
        git clone -b 18.06 https://github.com/garypang13/luci-theme-edge.git
        git clone -b 18.06 https://github.com/jerrykuku/luci-theme-argon.git
        git clone -b master https://github.com/vernesong/OpenClash.git
        git clone https://github.com/frainzy1477/luci-app-clash.git
        git clone https://github.com/tty228/luci-app-serverchan.git
        git clone -b lede https://github.com/pymumu/luci-app-smartdns.git
        git clone https://github.com/jerrykuku/node-request.git
        git clone https://github.com/jerrykuku/luci-app-jd-dailybonus.git
        git clone https://github.com/garypang13/luci-app-eqos
        git clone https://github.com/xiaoqingfengATGH/luci-theme-infinityfreedom.git
        git clone https://github.com/fw876/helloworld.git
        svn co https://github.com/coolsnowwolf/lede/trunk/package/lean/redsocks2
        svn co https://github.com/coolsnowwolf/lede/trunk/package/lean/tcpping
        svn co https://github.com/coolsnowwolf/lede/trunk/package/lean/microsocks

    - name: 下载和安装自定义设置软件
      run: |
        cd openwrt
        ./scripts/feeds clean
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: 加载Lienol-19.07.config，修改IP和内核
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        sed -i '/set luci.main.mediaurlbase=\/luci-static\/bootstrap/d' feeds/luci/themes/luci-theme-bootstrap/root/etc/uci-defaults/30_luci-theme-bootstrap
     #   sed -i 's/KERNEL_PATCHVER:=4.14/KERNEL_PATCHVER:=4.19/g' openwrt/target/linux/x86/Makefile
     #   sed -i 's/192.168.1.1/192.168.2.2/g' openwrt/package/base-files/files/bin/config_generate

    - name: SSH远程连接服务器配置固件
      uses: P3TERX/debugger-action@main
      if: env.SSH_ACTIONS == 'true' || contains(github.event.action, 'ssh')

    - name: 下载所有配置软件
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: 开始编译固件
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "::set-output name=status::success"
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "::set-env name=DEVICE_NAME::_$(cat DEVICE_NAME)"
        echo "::set-env name=FILE_DATE::$(date "+%Y-%m-%d %H.%I.%S")"

    - name: 检查github储存空间情况
      if: (!cancelled())
      run: df -hT

    - name: 上传bin文件夹(固件+ipk)在github空间
      uses: actions/upload-artifact@master
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: 19.07_bin_${{ env.FILE_DATE }}
        path: openwrt/bin

    - name: 整理固件文件夹
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "::set-env name=FIRMWARE::$PWD"
        echo "::set-output name=status::success"

    - name: 上传固件在github空间
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: 19.07_firmware_${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: 上传固件到cowtransfer网盘
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_COWTRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 64 --no-progress ${FIRMWARE} 2>&1 | tee cowtransfer.log
        echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"

    - name: 上传固件到WeTransfer网盘
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_WETRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress ${FIRMWARE} 2>&1 | tee wetransfer.log
        echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
